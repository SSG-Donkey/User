name: Build and Deploy Spring Boot Application

# 이 워크플로우는 main 브랜치에 push 이벤트가 발생할 때 트리거됩니다.
on:
  push:
    branches: [ main ]

# 작업 정의
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # 가장 최신의 Ubuntu 러너에서 작업을 실행합니다.

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2  # 현재 GitHub 리포지토리에서 코드를 체크아웃합니다.

      - name: Set up JDK 17 with Zulu
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'  # Zulu OpenJDK를 사용합니다.

      - name: Build with Gradle
        run: ./gradlew build  # Gradle Wrapper를 사용하여 애플리케이션을 빌드합니다.
        working-directory: ./backend  # 'backend' 디렉토리에서 빌드 명령을 실행합니다.

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1  # AWS 자격증명을 설정합니다.
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # AWS 액세스 키 ID
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # AWS 시크릿 액세스 키
          aws-region: ${{ secrets.AWS_REGION }}  # AWS 리전 설정

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1  # Amazon ECR에 로그인합니다.

      - name: Build, tag, and push Docker image to Amazon ECR
        run: |
          docker build -f ./backend/Dockerfile -t ${{ steps.login-ecr.outputs.registry }}/donkey-app:${{ github.sha }} ./backend
          docker push ${{ steps.login-ecr.outputs.registry }}/donkey-app:${{ github.sha }}
        working-directory: ./backend  # 'backend' 디렉토리에서 Docker 빌드 및 푸시 명령을 실행합니다.

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1  # Kustomize를 설치합니다. Kubernetes 매니페스트를 관리하는 도구입니다.

      - name: Checkout kustomize repository
        uses: actions/checkout@v2  # 별도의 리포지토리에서 k8s 매니페스트를 체크아웃합니다.
        with:
          repository: SSG-Donkey/k8s-manifest-repo-  # 조직의 k8s 매니페스트 리포지토리
          ref: main
          token: ${{ secrets.ACTION_TOKEN }}  # GitHub 액세스 토큰
          path: k8s-manifest-repo

      - name: Update Kubernetes resources
        run: |
          cd k8s-manifest-repo/overlays/dev/
          kustomize edit set image ${{ steps.login-ecr.outputs.registry }}/donkey-app:${{ steps.login-ecr.outputs.registry }}/donkey-app:${{ github.sha }}
          cat kustomization.yaml
        working-directory: ./k8s-manifest-repo/overlays/dev  # 'k8s-manifest-repo/overlays/dev' 디렉토리에서 kustomize 명령을 실행합니다.

      - name: Commit files
        run: |
          cd k8s-manifest-repo
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git commit -am "Update image tag for donkey-app"
          git push -u origin main
        working-directory: ./k8s-manifest-repo  # 'k8s-manifest-repo' 디렉토리에서 커밋 및 푸시 명령을 실행합니다.
